@model ObjectBussiness.Exam

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>Exam</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm("Create", "Exam", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.DateCreateTest, new { @class = "control-label col-md-2" })
                <br>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateCreateTest, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateCreateTest, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TimeBegin, new { @class = "control-label col-md-2" })
                <br>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TimeBegin, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TimeBegin, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TimeEnd, new { @class = "control-label col-md-2" })
                <br>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TimeEnd, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TimeEnd, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.LabelFor(model => model.TimeDelay, new { @class = "control-label col-md-2" })
            <br>
            <div class="col-md-10">
                @Html.EditorFor(model => model.TimeDelay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TimeDelay, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-2" })
            <br>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        }
    </div>
</div>

<div>
    <a href="@Url.Action("")">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
